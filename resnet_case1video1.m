%train resnet on case1video1
clc
clear all
training_folder = 'C:\Users\NeuroBeast\Desktop\case1video1  dense 32x32';
training_data_total = imageDatastore(training_folder,'IncludeSubfolders',true,'LabelSource','foldernames');
training_data_total = shuffle(training_data_total);
[train,leftdata] = splitEachLabel(training_data_total,3136,'randomized');
leftdata = shuffle(leftdata);
[validate,test]=splitEachLabel(leftdata,1568,'randomized');
imageAugmenter = imageDataAugmenter('RandRotation',[-30 30],'RandYReflection',true);
augimdsTrain = augmentedImageDatastore([32 32],train, ...
    'DataAugmentation',imageAugmenter);
opts = trainingOptions('adam', ...
    'InitialLearnRate',0.001, ...
    'LearnRateSchedule','piecewise',...
    'LearnRateDropFactor',0.1,...
    'LearnRateDropPeriod',100,...
    'MaxEpochs',500,...
    'MiniBatchSize',256,...
    'Verbose',true,...
    'GradientDecayFactor',0.9,...
    'SquaredGradientDecayFactor',0.999,...
    'Epsilon',0.01,...
    'ValidationData',validate,...
    'ValidationFrequency',50,...
    'ValidationPatience',Inf,...
    'ExecutionEnvironment','multi-gpu',...
    'CheckpointPath','C:\Users\NeuroBeast\Desktop\network_checkpoints_0704',...
    'Plots','training-progress');
%%
model_folder_saved= '../trained models/20180704';
%
neuralnet1=resnet16;
[net,info] = trainNetwork(augimdsTrain,neuralnet1,opts);
model_name_saved='resnet16_20180704_03_case1video4.mat';
model=fullfile(model_folder_saved,model_name_saved);
save (model,'net','info','test')
%% test:
[FILEPATH,filename,ext] = fileparts(model_name_saved);
true_class=test.Labels;
preds=classify(net,test);
f=figure;
plotconfusion(true_class,preds)
title(filename)
plot_name=strcat('C:\Users\NeuroBeast\Desktop\result 20180704\',filename);
saveas(f,plot_name)