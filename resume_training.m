%resume network training
training_folder = uigetdir;
training_data_total = imageDatastore(training_folder,'IncludeSubfolders',true,'LabelSource','foldernames');
training_data_total = shuffle(training_data_total);
[train,leftdata] = splitEachLabel(training_data_total,6400,'randomized');
leftdata = shuffle(leftdata);
[validate,test]=splitEachLabel(leftdata,3200,'randomized');
load ('C:\Users\NeuroBeast\Desktop\network_checkpoints\convnet_checkpoint__37200__2018_07_03__23_22_28.mat')
opts = trainingOptions('adam', ...
    'InitialLearnRate',0.00001, ...
    'LearnRateSchedule','piecewise',...
    'LearnRateDropFactor',0.1,...
    'LearnRateDropPeriod',50,...
    'MaxEpochs',1,...
    'MiniBatchSize',256,...
    'Verbose',true,...
    'GradientDecayFactor',0.9,...
    'SquaredGradientDecayFactor',0.999,...
    'Epsilon',0.01,...
    'ValidationData',validate,...
    'ValidationFrequency',50,...
    'ValidationPatience',Inf,...
    'ExecutionEnvironment','multi-gpu',...
    'CheckpointPath','C:\Users\NeuroBeast\Desktop\network_checkpoints',...
    'Plots','training-progress');
net = layerGraph(net);
layers = net.Layers;
connections = net.Connections;
layers(1:105) = freezeWeights(layers(1:105));
net = createLgraphUsingConnections(layers,connections);
net = trainNetwork(train,net,opts);
model_name_saved='resnet18_20180704_01_case1video4.mat';
model_folder_saved= '../trained models/20180704';
model=fullfile(model_folder_saved,model_name_saved);
save (model,'net','test')