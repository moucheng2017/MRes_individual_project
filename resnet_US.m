%% training data
clc
clear all
training_folder = uigetdir;
training_data_total = imageDatastore(training_folder,'IncludeSubfolders',true,'LabelSource','foldernames');
[train,validate] = splitEachLabel(training_data_total,5500,'randomized');
%%
inputlayer=imageInputLayer([224 224 3],'Name','inputlayer','Normalization','none');
net = resnet50;
lgraph = layerGraph(net);
lgraph=replaceLayer(lgraph,'input_1',inputlayer);
lgraph = removeLayers(lgraph, {'fc1000_softmax','ClassificationLayer_fc1000'});
newLayers = [
    dropoutLayer(0.5,'Name','dropoutlayer_new2')
    fullyConnectedLayer(3,'Name','fc_new','WeightLearnRateFactor',10,'BiasLearnRateFactor',10)
    softmaxLayer('Name','softmax')
    classificationLayer('Name','classoutput')];
lgraph = addLayers(lgraph,newLayers);
lgraph = connectLayers(lgraph,'fc1000','dropoutlayer_new2');
%    fullyConnectedLayer(1000,'Name','new_fc1000')
%% freeze layers
layers = lgraph.Layers;
connections = lgraph.Connections;
layers(1:163) = freezeWeights(layers(1:163));% up to activation_46_relu, except for last res modules
lgraph = createLgraphUsingConnections(layers,connections);
%% data augmentation
%{
pixelRange = [-20 20];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange);
augimdsTrain = augmentedImageDatastore([224 224],train, ...
    'DataAugmentation',imageAugmenter);
%}
%%
%{
opts = trainingOptions('sgdm', ...
    'InitialLearnRate',0.1, ...
    'MaxEpochs',2000,...
    'MiniBatchSize',128,...
    'ValidationData',validate,...
    'ValidationFrequency',40,...
    'LearnRateDropFactor',0.1,...
    'LearnRateDropPeriod',50,...
    'Verbose',false ,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
%}
%{
opts = trainingOptions('sgdm', ...
    'InitialLearnRate',0.0001, ...
    'MaxEpochs',2000,...
    'MiniBatchSize',256,...
    'ValidationData',validate,...
    'ValidationFrequency',50,...
    'ValidationPatience',10,...
    'Verbose',false ,...
    'LearnRateDropFactor',0.5,...
    'LearnRateDropPeriod',500,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
%}
opts = trainingOptions('adam', ...
    'InitialLearnRate',0.001, ...
    'MaxEpochs',150,...
    'MiniBatchSize',128,...
    'Verbose',true,...
    'GradientDecayFactor',0.9,...
    'SquaredGradientDecayFactor',0.999,...
    'Epsilon',0.1,...
    'ValidationData',validate,...
    'ValidationFrequency',20,...
    'ValidationPatience',Inf,...
    'ExecutionEnvironment','multi-g pu',...
    'Plots','training-progress');

[resnetUS,info] = trainNetwork(train, lgraph, opts);
model_name='resnet_case1_50%sliding_high_intensity.mat';
model_folder= '../trained models/18062018';
model=fullfile(model_folder,model_name);
save (model,'resnetUS')
