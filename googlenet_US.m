%% training data
clc
clear all
training_folder = uigetdir;
training_data_total = imageDatastore(training_folder,'IncludeSubfolders',true,'LabelSource','foldernames');
training_data_total = shuffle(training_data_total);
[train,leftdata] = splitEachLabel(training_data_total,5400,'randomized');
leftdata = shuffle(leftdata);
[validate,test]=splitEachLabel(leftdata,1800,'randomized');
%% 
inputlayer=imageInputLayer([224 224 3],'Name','inputlayer','Normalization','none');
net = googlenet;
lgraph = layerGraph(net);%figure('Units','normalized','Position',[0.1 0.1 0.8 0.8]);plot(lgraph);
lgraph=replaceLayer(lgraph,'data',inputlayer);
lgraph = removeLayers(lgraph, {'prob','output'});
Layers = [
    fullyConnectedLayer(1000,'Name','fcl_new1')
    dropoutLayer(0.8,'Name','dropoutlayer_new1')
    fullyConnectedLayer(3,'Name','fc','WeightLearnRateFactor',10,'BiasLearnRateFactor',10)
    softmaxLayer('Name','softmax')
    classificationLayer('Name','classoutput')];
lgraph = addLayers(lgraph,Layers);
lgraph = connectLayers(lgraph,'loss3-classifier','fcl_new1');

%% freeze layers
layers = lgraph.Layers;
connections = lgraph.Connections;
layers(1:39) = freezeWeights(layers(1:39));%layer39:'pool3-3x3_s2' 
lgraph = createLgraphUsingConnections(layers,connections);
%% data augmentation
imageAugmenter = imageDataAugmenter('RandRotation',[-30 30],...
                                    'RandXReflection',true);
augimdsTrain = augmentedImageDatastore([224 224],train, ...
    'DataAugmentation',imageAugmenter);
%%
%{
opts = trainingOptions('sgdm', ...
    'LearnRateSchedule','piecewise',...
    'InitialLearnRate',0.001, ...
    'MaxEpochs',1000,...
    'MiniBatchSize',128,...
    'LearnRateDropFactor',0.5,...
    'LearnRateDropPeriod',5,...
    'Verbose',true,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
%}
opts = trainingOptions('adam', ...
    'InitialLearnRate',0.001, ...
    'MaxEpochs',300,...
    'MiniBatchSize',64,...
    'Verbose',true,...
    'GradientDecayFactor',0.9,...
    'SquaredGradientDecayFactor',0.999,...
    'Epsilon',0.01,...
    'ValidationData',validate,...
    'ValidationFrequency',50,...
    'ValidationPatience',100,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
[googlenetUS,info] = trainNetwork(augimdsTrain, lgraph, opts);
model_name='Googlenet_case1_39LayersFrozen_20_40Patches.mat';
model_folder= '../trained models/18062018';
model=fullfile(model_folder,model_name);
save (model,'googlenetUS','info','test')
%%
