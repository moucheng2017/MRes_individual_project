%% training data
clc
clear all
training_folder = uigetdir;
training_data_total = imageDatastore(training_folder,'IncludeSubfolders',true,'LabelSource','foldernames');
[train,validate] = splitEachLabel(training_data_total,1100,100,'randomized');
%%
net = googlenet;
lgraph = layerGraph(net);
%figure('Units','normalized','Position',[0.1 0.1 0.8 0.8]);
%plot(lgraph)
lgraph = removeLayers(lgraph, {'loss3-classifier','prob','output'});
newLayers = [
    fullyConnectedLayer(3,'Name','fc','WeightLearnRateFactor',10,'BiasLearnRateFactor',10)
    softmaxLayer('Name','softmax')
    classificationLayer('Name','classoutput')];
lgraph = addLayers(lgraph,newLayers);
lgraph = connectLayers(lgraph,'pool5-drop_7x7_s1','fc');
%figure('Units','normalized','Position',[0.3 0.3 0.4 0.4]);
%plot(lgraph)
%ylim([0,10])
%% freeze layers

layers = lgraph.Layers;
connections = lgraph.Connections;
layers(1:111) = freezeWeights(layers(1:111));
lgraph = createLgraphUsingConnections(layers,connections);

%% data augmentation
%{
pixelRange = [-30 30];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange);
augimdsTrain = augmentedImageDatastore([224 224],train, ...
    'DataAugmentation',imageAugmenter);
%}
%%
%{
opts = trainingOptions('sgdm', ...
    'InitialLearnRate',0.1, ...
    'MaxEpochs',2000,...
    'MiniBatchSize',128,...
    'ValidationData',validate,...
    'ValidationFrequency',40,...
    'LearnRateDropFactor',0.1,...
    'LearnRateDropPeriod',50,...
    'Verbose',false ,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
%}
opts = trainingOptions('sgdm', ...
    'InitialLearnRate',0.0001, ...
    'MaxEpochs',2000,...
    'MiniBatchSize',256,...
    'Verbose',false ,...
    'LearnRateDropFactor',0.5,...
    'LearnRateDropPeriod',500,...
    'ExecutionEnvironment','multi-gpu',...
    'Plots','training-progress');
[googlenetUS,info] = trainNetwork(training_data_total, lgraph, opts);
save ('GooglenetFreezeWeights20x20.mat','googlenetUS')

